unit Main;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons,
  GVConsts, GVStacks;

type
  TMainForm = class(TForm)
    mmoActions: TMemo;
    grpActions: TGroupBox;
    btnPush: TBitBtn;
    btnPop: TBitBtn;
    btnPeek: TBitBtn;
    btnSwap: TBitBtn;
    btnDup: TBitBtn;
    btnRot: TBitBtn;
    btnOver: TBitBtn;
    btnEqualP: TBitBtn;
    btnClear: TBitBtn;
    lblDepth: TLabel;
    lblCapacity: TLabel;
    procedure btnPushClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
  private
    { Déclarations privées }
    FStackStr: TGVStringStack;
    function IsEqual: Boolean;
  public
    { Déclarations publiques }
    procedure UpdateButtons;
  end;

var
  MainForm: TMainForm;

implementation

{$R *.dfm}

procedure TMainForm.btnPushClick(Sender: TObject);
var
  St: string;
begin
  case (Sender as TBitBtn).TabOrder of
    0 : begin
          St := 'Item : ' + IntToStr(FStackStr.Count);
          FStackStr.Push(St);
        end;
    1 : St := 'Pop : ' + FStackStr.Pop;
    2 : St := 'Peek : ' + FStackStr.Peek;
    3 : begin
          St := 'Swap';
          FStackStr.Swap;
        end;
    4 : begin
          St := 'Dup';
          FStackStr.Dup;
        end;
    5 : begin
          St := 'Rot';
          FStackStr.Rot;
        end;
    6 : begin
          St := 'Over';
          FStackStr.Over;
        end;
    7 : if IsEqual then
          St := 'Les valeurs sont égales.'
        else
          St := 'Les valeurs sont inégales.';
    8 : begin
          FStackStr.Clear;
          FStackStr.Shrink;
          St := '*** CLEAR ***';
        end;
  end;
  lblCapacity.Caption := 'Capacité de la pile : ' +
    IntToStr(FStackStr.Capacity);
  lblDepth.Caption := 'Profondeur de la pile : ' +
    IntToStr(FStackStr.Count);
  MmoActions.Lines.Append(St);
end;

procedure TMainForm.FormCreate(Sender: TObject);
// création de la fenêtre
begin
  FStackStr := TGVStringStack.Create;  // pile créée
  UpdateButtons; // mise à jour des boutons
end;

procedure TMainForm.FormDestroy(Sender: TObject);
// destruction de la fenêtre
begin
  FStackStr.Free; // libération de l apile
end;

function TMainForm.IsEqual: Boolean;
// test de l'égalité au sommet de la pile
begin
  Result := True;
end;

procedure TMainForm.UpdateButtons;
// mise à jour des boutons
var
  StackCount : Integer;
  StackEnabled : Boolean;
begin
  StackCount := FStackStr.Count;
  StackEnabled := (StackCount <> 0);
  btnPop.Enabled := StackEnabled;
  btnPeek.Enabled := StackEnabled;
  btnDup.Enabled := StackEnabled;
  StackEnabled := (StackCount > 1);
  btnSwap.Enabled := StackEnabled;
  btnEqualP.Enabled := StackEnabled;
  btnOver.Enabled := StackEnabled;
  StackEnabled := (StackCount > 2);
  btnRot.Enabled := StackEnabled;
end;

end.
